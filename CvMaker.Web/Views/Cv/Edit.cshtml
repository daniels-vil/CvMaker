@using CvMaker.Core.Enums;
@model CvMaker.Web.Models.CvItemModel

@{
    ViewData["Title"] = "Edit";
}

<div class="edit_cv_title">
    <h1>Edit @Model.FullName() CV</h1>
</div>
<hr />
<div class="row cv_edit_outer">
    <div class="col-md-4 cv_edit_wrap">
        @using (Html.BeginForm("CreateNextStep", "Cv", FormMethod.Post))
        {
            <div class="create_next_step_address">
                @Html.HiddenFor(m => m.Id)
                <div class="mb-3" hidden>
                    @Html.LabelFor(n => n.Address.Country, "Country")
                    @Html.TextBoxFor(n => n.Address.Country, new { @class = "form-control",maxlength = "50" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(n => n.Address.City, "City")
                    @Html.TextBoxFor(n => n.Address.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(n => n.Address.PostCode, "", new { @class = "text-danger",maxlength = "50" })
                </div>
                <div class="mb-3">
                    @Html.LabelFor(n => n.Address.PostCode, "Post code")
                    @Html.TextBoxFor(n => n.Address.PostCode, new { @class = "form-control" ,maxlength = "8"})
                    @Html.ValidationMessageFor(n => n.Address.PostCode, "", new { @class = "text-danger" })
                </div>
                <div class="street_streetnumber">
                    <div class="form-group inline-block mb-3">
                        @Html.LabelFor(n => n.Address.Street, "Street")
                        @Html.TextBoxFor(n => n.Address.Street, new { @class = "form-control",maxlength = "50" })
                        @Html.ValidationMessageFor(n => n.Address.Street, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group inline-block ml-3 mb-3">
                        @Html.LabelFor(n => n.Address.StreetNumber, "Street number")
                        @Html.TextBoxFor(n => n.Address.StreetNumber, new { @class = "form-control" ,maxlength = "10" })
                        @Html.ValidationMessageFor(n => n.Address.StreetNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="skills_section">
                <div class="section_name">
                    <p>Skill(s)</p>
                </div>

                <div class="add_button">
                    <p>Add more</p>
                    <button type="button" id="add-skill-btn">+</button>
                </div>
                <div id="skills-container">
                    @for (int i = 0; i < Model.Skills.Count; i++)
                    {
                        <div class="mb-3">
                            <div>
                                @Html.LabelFor(n => n.Skills[i].SkillName, "Skill name")
                                @Html.TextBoxFor(n => n.Skills[i].SkillName, new { @class = "form-control" ,maxlength = "30"})
                            </div>
                            <div>
                                @Html.LabelFor(n => n.Skills[i].SkillDescription, "Please describe your skill")
                                @Html.TextAreaFor(n => n.Skills[i].SkillDescription, new { @class = "form-control text_area", maxlength = "200" })
                            </div>
                        </div>
                    }
                </div>

            </div>
            <div class="languages_section">
                <div class="section_name">
                    <p>Language(s)</p>
                </div>
                <div class="add_button">
                    <p>Add more</p>
                    <button type="button" id="add-language-btn">+</button>
                </div>
                <div id="languages_container">
                    @for (int i = 0; i < Model.LanguageKnowledge.Count; i++)
                    {
                        <div class="skill-item">
                            <div class="mb-3">
                                @Html.LabelFor(m => m.LanguageKnowledge[i].Language, "Language")
                                @Html.TextBoxFor(m => m.LanguageKnowledge[i].Language, new { @class = "form-control",maxlength = "20" })
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(m => m.LanguageKnowledge, "Language level")
                                <select asp-for="@Model.LanguageKnowledge[i].LanguageLevel" asp-items="Html.GetEnumSelectList<KnowledgeEnum>()" required>
                                    <option value="" disabled selected hidden>Please select</option>
                                </select>
                            </div>
                        </div>
                    }
                </div>

            </div>

            <div class="employment_section">
                <div class="section_name">
                    <p>Employment</p>
                </div>
                <div class="add_button">
                    <p>Add more</p>
                    <button type="button" id="add-employment-btn">+</button>
                </div>
                <div class="employment_container">
                    @for (int i = 0; i < @Model.Employments.Count; i++)
                    {
                        <div class="employment_item">
                            <div class="mb-3">
                                @Html.LabelFor(m => m.Employments[i].NameOfCompany, "Name of the company")
                                @Html.TextBoxFor(m => m.Employments[i].NameOfCompany, new { @class = "form-control" ,maxlength = "50"})
                            </div>

                            <div class="mb-3">
                                @Html.LabelFor(m => m.Employments[i].JobPosition, "Job Position")
                                @Html.TextBoxFor(m => m.Employments[i].JobPosition, new { @class = "form-control",maxlength = "50" })
                            </div>

                            <div class="mb-3" style="display:inline-block; margin-right:20px;">
                                @Html.LabelFor(m => m.Employments[i].WorkLoad, "Work load")
                                @Html.TextBoxFor(m => m.Employments[i].WorkLoad, new { @class = "form-control",maxlength = "30" })
                            </div>

                            <div class="mb-3" style="display: inline-block; margin-right: 15px;">
                                @Html.LabelFor(m => m.Employments[i].StartDate, "Start Date")
                                @Html.TextBoxFor(m => m.Employments[i].StartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            </div>

                            <div class="mb-3" style="display: inline-block">
                                @Html.LabelFor(m => m.Employments[i].EndDate, "End Date")
                                @Html.TextBoxFor(m => m.Employments[i].EndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            </div>
                        </div>
                    }
                </div>
                <div class="education_container">
                    <div class="section_name">
                        <p>Education</p>
                    </div>
                    <div class="add_button">
                        <p>Add more</p>
                        <button type="button" id="add-education-btn">+</button>
                    </div>
                    <div id="education-items-container">
                        @for (int i = 0; i < @Model.Educations.Count; i++)
                        {
                            <div class="education_item">
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Educations[i].NameOfSchool, "Institution name")
                                    @Html.TextBoxFor(m => m.Educations[i].NameOfSchool, new { @class = "form-control" ,maxlength = "50"})
                                </div>

                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Educations[i].Faculty, "Faculty")
                                    @Html.TextBoxFor(m => m.Educations[i].Faculty, new { @class = "form-control" ,maxlength = "50"})
                                </div>
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Educations[i].StudyProgram, "Study program")
                                    @Html.TextBoxFor(m => m.Educations[i].StudyProgram, new { @class = "form-control",maxlength = "50" })
                                </div>
                                <div class="mb-3">
                                    @Html.LabelFor(m => m.Educations[i].EducationalLevel, "Degree")
                                    @Html.TextBoxFor(m => m.Educations[i].EducationalLevel, new { @class = "form-control",maxlength = "50" })
                                </div>

                                <div class="mb-3" style="display: inline-block; margin-right:15px">
                                    @Html.LabelFor(m => m.Educations[i].StudyStartDate, "Start Date")
                                    @Html.TextBoxFor(m => m.Educations[i].StudyStartDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                </div>

                                <div class="mb-3" style="display: inline-block; margin-right:15px">
                                    @Html.LabelFor(m => m.Educations[i].StudyEndDate, "End Date")
                                    @Html.TextBoxFor(m => m.Educations[i].StudyEndDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                                </div>
                                <div class="mb-3" style="display:inline-block;">
                                    @Html.LabelFor(m => m.Educations[i].Status, "Status")
                                    <select asp-for="@Model.Educations[i].Status" asp-items="Html.GetEnumSelectList<EducationStatusEnum>()" required>
                                        <option value="" disabled selected hidden>Please select</option>
                                    </select>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="create_button_wrapper">
                <button type="submit" class="btn btn-unique_create">Update!</button>

            </div>
        }
    </div>
</div>

<div>
    <a asp-action="List">Back to List</a>
</div>

